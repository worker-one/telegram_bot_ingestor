name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: global
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          echo "BOT_TOKEN=${{ env.BOT_TOKEN }}" >> .env
          echo "DATABASE_URL=${{ env.DATABASE_URL }}" >> .env
          echo "FIREWORKS_API_KEY=${{ env.FIREWORKS_API_KEY }}" >> .env
          echo "TYPE=${{ env.TYPE }}" >> .env
          echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> .env
          echo "PRIVATE_KEY_ID=${{ env.PRIVATE_KEY_ID }}" >> .env
          echo "PRIVATE_KEY=${{ env.PRIVATE_KEY }}" >> .env
          echo "CLIENT_EMAIL=${{ env.CLIENT_EMAIL }}" >> .env
          echo "CLIENT_ID=${{ env.CLIENT_ID }}" >> .env
          echo "TOKEN_URI=${{ env.TOKEN_URI }}" >> .env
          echo "AUTH_URI=${{ env.AUTH_URI }}" >> .env
          echo "AUTH_PROVIDER_X509_CERT_URL=${{ env.AUTH_PROVIDER_X509_CERT_URL }}" >> .env
          echo "CLIENT_X509_CERT_URL=${{ env.CLIENT_X509_CERT_URL }}" >> .env
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/telegram_bot_ingestor:latest

      - name: Log out from DockerHub
        run: docker logout
